apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: elasticsearchtemplates.xo.90poe.io
spec:
  group: xo.90poe.io
  names:
    kind: ElasticSearchTemplate
    listKind: ElasticSearchTemplateList
    plural: elasticsearchtemplates
    singular: elasticsearchtemplate
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ElasticSearchTemplate is the Schema for the elasticsearchtemplates
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ElasticSearchTemplateSpec defines the desired state of ElasticSearchTemplate
          properties:
            aliases:
              description: (Optional, alias object) Index aliases which include the
                index. See Update index alias.
              properties:
                add:
                  description: Adds an alias to an index.
                  properties:
                    aliases:
                      description: (String) Comma-separated list or wildcard expression
                        of index alias names to add, remove, or delete. If the alias
                        parameter is not specified, this parameter is required for
                        the add or remove action.
                      items:
                        type: string
                      type: array
                    filter:
                      description: (Optional, query object) Filter query used to limit
                        the index alias. If specified, the index alias only applies
                        to documents returned by the filter. Filter query used to
                        limit the index alias. If specified, the index alias only
                        applies to documents returned by the filter. See Filtered
                        aliases for an example.
                      type: string
                    index_routing:
                      description: (Optional, string) Custom routing value used for
                        the alias’s indexing operations.
                      type: string
                    indices:
                      description: (Array) Array of index names used to perform the
                        action. If the index parameter is not specified, this parameter
                        is required.
                      items:
                        type: string
                      type: array
                    is_write_index:
                      description: (Optional, boolean) If true, assigns the index
                        as an alias’s write index. Defaults to false.
                      type: boolean
                    routing:
                      description: (Optional, string) Custom routing value used to
                        route operations to a specific shard.
                      type: string
                    search_routing:
                      description: (Optional, string) Custom routing value used for
                        the alias’s search operations.
                      type: string
                  type: object
                remove:
                  description: Adds an alias to an index.
                  properties:
                    aliases:
                      description: (String) Comma-separated list or wildcard expression
                        of index alias names to add, remove, or delete. If the alias
                        parameter is not specified, this parameter is required for
                        the add or remove action.
                      items:
                        type: string
                      type: array
                    filter:
                      description: (Optional, query object) Filter query used to limit
                        the index alias. If specified, the index alias only applies
                        to documents returned by the filter. Filter query used to
                        limit the index alias. If specified, the index alias only
                        applies to documents returned by the filter. See Filtered
                        aliases for an example.
                      type: string
                    index_routing:
                      description: (Optional, string) Custom routing value used for
                        the alias’s indexing operations.
                      type: string
                    indices:
                      description: (Array) Array of index names used to perform the
                        action. If the index parameter is not specified, this parameter
                        is required.
                      items:
                        type: string
                      type: array
                    is_write_index:
                      description: (Optional, boolean) If true, assigns the index
                        as an alias’s write index. Defaults to false.
                      type: boolean
                    routing:
                      description: (Optional, string) Custom routing value used to
                        route operations to a specific shard.
                      type: string
                    search_routing:
                      description: (Optional, string) Custom routing value used for
                        the alias’s search operations.
                      type: string
                  type: object
                remove_index:
                  description: Adds an alias to an index.
                  properties:
                    aliases:
                      description: (String) Comma-separated list or wildcard expression
                        of index alias names to add, remove, or delete. If the alias
                        parameter is not specified, this parameter is required for
                        the add or remove action.
                      items:
                        type: string
                      type: array
                    filter:
                      description: (Optional, query object) Filter query used to limit
                        the index alias. If specified, the index alias only applies
                        to documents returned by the filter. Filter query used to
                        limit the index alias. If specified, the index alias only
                        applies to documents returned by the filter. See Filtered
                        aliases for an example.
                      type: string
                    index_routing:
                      description: (Optional, string) Custom routing value used for
                        the alias’s indexing operations.
                      type: string
                    indices:
                      description: (Array) Array of index names used to perform the
                        action. If the index parameter is not specified, this parameter
                        is required.
                      items:
                        type: string
                      type: array
                    is_write_index:
                      description: (Optional, boolean) If true, assigns the index
                        as an alias’s write index. Defaults to false.
                      type: boolean
                    routing:
                      description: (Optional, string) Custom routing value used to
                        route operations to a specific shard.
                      type: string
                    search_routing:
                      description: (Optional, string) Custom routing value used for
                        the alias’s search operations.
                      type: string
                  type: object
              type: object
            drop_on_delete:
              description: Should we drop template if K8S object is deleted, default
                false
              type: boolean
            index_patterns:
              description: (Required, array of strings) Array of wildcard expressions
                used to match the names of indices during creation.
              items:
                type: string
              type: array
            mappings:
              description: '(Optional, mapping object) Mapping for fields in the index.
                If specified, this mapping can include:     Field names     Field
                datatypes     Mapping parameters'
              pattern: '[^,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]'
              type: string
            name:
              description: See more at https://www.elastic.co/guide/en/elasticsearch/reference/7.x/indices-templates.html
                Name of ES template
              maxLength: 255
              minLength: 1
              pattern: ^[^-_+A-Z][^A-Z\\\/\*\?"\<\> ,|#]{1,254}$
              type: string
            settings:
              description: (Optional, index setting object) Configuration options
                for the index. See Index Settings.
              properties:
                analyze:
                  properties:
                    max_token_count:
                      description: The maximum number of tokens that can be produced
                        using _analyze API. Defaults to 10000.
                      format: int64
                      minimum: 1
                      type: integer
                  type: object
                auto_expand_replicas:
                  description: Auto-expand the number of replicas based on the number
                    of data nodes in the cluster. Set to a dash delimited lower and
                    upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all).
                    Defaults to false (i.e. disabled). Note that the auto-expanded
                    number of replicas only takes allocation filtering rules into
                    account, but ignores any other allocation rules such as shard
                    allocation awareness and total shards per node, and this can lead
                    to the cluster health becoming YELLOW if the applicable rules
                    prevent all the replicas from being allocated.
                  type: string
                blocks:
                  description: ESIndexBlocks defines block in dynamic values
                  properties:
                    metadata:
                      description: Set to true to disable index metadata reads and
                        writes.
                      pattern: ^(true|false)$
                      type: string
                    read:
                      description: Set to true to disable read operations against
                        the index.
                      pattern: ^(true|false)$
                      type: string
                    read_only:
                      description: Set to true to make the index and index metadata
                        read only, false to allow writes and metadata changes.
                      pattern: ^(true|false)$
                      type: string
                    read_only_allow_delete:
                      description: Similar to index.blocks.read_only but also allows
                        deleting the index to free up resources. The disk-based shard
                        allocator may add and remove this block automatically.
                      pattern: ^(true|false)$
                      type: string
                    write:
                      description: Set to true to disable data write operations against
                        the index. Unlike read_only, this setting does not affect
                        metadata. For instance, you can close an index with a write
                        block, but not an index with a read_only block.
                      pattern: ^(true|false)$
                      type: string
                  type: object
                codec:
                  description: The default value compresses stored data with LZ4 compression,
                    but this can be set to best_compression which uses DEFLATE for
                    a higher compression ratio, at the expense of slower stored fields
                    performance. If you are updating the compression type, the new
                    one will be applied after segments are merged. Segment merging
                    can be forced using force merge.
                  pattern: ^(default|best_compression)$
                  type: string
                default_pipeline:
                  description: The default ingest node pipeline for this index. Index
                    requests will fail if the default pipeline is set and the pipeline
                    does not exist. The default may be overridden using the pipeline
                    parameter. The special pipeline name _none indicates no ingest
                    pipeline should be run.
                  type: string
                final_pipeline:
                  description: The final ingest node pipeline for this index. Index
                    requests will fail if the final pipeline is set and the pipeline
                    does not exist. The final pipeline always runs after the request
                    pipeline (if specified) and the default pipeline (if it exists).
                    The special pipeline name _none indicates no ingest pipeline will
                    run.
                  type: string
                gc_deletes:
                  description: The length of time that a deleted document’s version
                    number remains available for further versioned operations. Defaults
                    to 60s.
                  type: string
                hidden:
                  description: Indicates whether the index should be hidden by default.
                    Hidden indices are not returned by default when using a wildcard
                    expression. This behavior is controlled per request through the
                    use of the expand_wildcards parameter. Possible values are true
                    and false (default).
                  pattern: ^(true|false)$
                  type: string
                highlight:
                  properties:
                    max_analyzed_offset:
                      description: The maximum number of characters that will be analyzed
                        for a highlight request. This setting is only applicable when
                        highlighting is requested on a text that was indexed without
                        offsets or term vectors. Defaults to 1000000.
                      format: int64
                      minimum: 1
                      type: integer
                  type: object
                load_fixed_bitset_filters_eagerly:
                  description: Indicates whether cached filters are pre-loaded for
                    nested queries. Possible values are true (default) and false.
                  pattern: ^(true|false)$
                  type: string
                max_docvalue_fields_search:
                  description: The maximum value of window_size for rescore requests
                    in searches of this index. Defaults to index.max_result_window
                    which defaults to 10000. Search requests take heap memory and
                    time proportional to max(window_size, from + size) and this limits
                    that memory.
                  format: int64
                  minimum: 1
                  type: integer
                max_inner_result_window:
                  description: The maximum value of from + size for inner hits definition
                    and top hits aggregations to this index. Defaults to 100. Inner
                    hits and top hits aggregation take heap memory and time proportional
                    to from + size and this limits that memory.
                  format: int64
                  minimum: 1
                  type: integer
                max_ngram_diff:
                  description: The maximum allowed difference between min_gram and
                    max_gram for NGramTokenizer and NGramTokenFilter. Defaults to
                    1.
                  format: int64
                  minimum: 1
                  type: integer
                max_refresh_listeners:
                  description: Maximum number of refresh listeners available on each
                    shard of the index. These listeners are used to implement refresh=wait_for.
                    The maximum allowed difference between max_shingle_size and min_shingle_size
                    for ShingleTokenFilter. Defaults to 3.
                  format: int64
                  minimum: 1
                  type: integer
                max_regex_length:
                  description: The maximum length of regex that can be used in Regexp
                    Query. Defaults to 1000.
                  format: int64
                  minimum: 1
                  type: integer
                max_rescore_window:
                  description: The maximum value of window_size for rescore requests
                    in searches of this index. Defaults to index.max_result_window
                    which defaults to 10000. Search requests take heap memory and
                    time proportional to max(window_size, from + size) and this limits
                    that memory.
                  format: int64
                  minimum: 1
                  type: integer
                max_result_window:
                  description: The maximum value of from + size for searches to this
                    index. Defaults to 10000. Search requests take heap memory and
                    time proportional to from + size and this limits that memory.
                    See Scroll or Search After for a more efficient alternative to
                    raising this.
                  format: int64
                  minimum: 1
                  type: integer
                max_script_fields:
                  description: The maximum number of script_fields that are allowed
                    in a query. Defaults to 32.
                  format: int64
                  minimum: 1
                  type: integer
                max_shingle_diff:
                  description: The maximum allowed difference between max_shingle_size
                    and min_shingle_size for ShingleTokenFilter. Defaults to 3.
                  format: int64
                  minimum: 1
                  type: integer
                max_terms_count:
                  description: The maximum number of terms that can be used in Terms
                    Query. Defaults to 65536.
                  format: int64
                  minimum: 1
                  type: integer
                number_of_replicas:
                  description: Dynamic index settings The number of replicas each
                    primary shard has. Defaults to 1.
                  format: int32
                  minimum: 1
                  type: integer
                number_of_shards:
                  description: 'Static Index settings The number of primary shards
                    that an index should have. Defaults to 1. This setting can only
                    be set at index creation time. It cannot be changed on a closed
                    index. Note: the number of shards are limited to 1024 per index.
                    This limitation is a safety limit to prevent accidental creation
                    of indices that can destabilize a cluster due to resource allocation.'
                  format: int32
                  maximum: 1024
                  minimum: 1
                  type: integer
                refresh_interval:
                  description: How often to perform a refresh operation, which makes
                    recent changes to the index visible to search. Defaults to 1s.
                    Can be set to -1 to disable refresh. If this setting is not explicitly
                    set, shards that haven’t seen search traffic for at least index.search.idle.after
                    seconds will not receive background refreshes until they receive
                    a search request. Searches that hit an idle shard where a refresh
                    is pending will wait for the next background refresh (within 1s).
                    This behavior aims to automatically optimize bulk indexing in
                    the default case when no searches are performed. In order to opt
                    out of this behavior an explicit value of 1s should set as the
                    refresh interval.
                  type: string
                routing:
                  description: Routing values
                  properties:
                    allocation:
                      properties:
                        enable:
                          description: 'Controls shard allocation for this index.
                            It can be set to:     all (default) - Allows shard allocation
                            for all shards.     primaries - Allows shard allocation
                            only for primary shards.     new_primaries - Allows shard
                            allocation only for newly-created primary shards.     none
                            - No shard allocation is allowed.'
                          pattern: ^(all|primaries|new_primaries|none)$
                          type: string
                      type: object
                    rebalance:
                      properties:
                        enable:
                          description: 'Enables shard rebalancing for this index.
                            It can be set to:     all (default) - Allows shard rebalancing
                            for all shards.     primaries - Allows shard rebalancing
                            only for primary shards.     replicas - Allows shard rebalancing
                            only for replica shards.     none - No shard rebalancing
                            is allowed.'
                          pattern: ^(all|primaries|replicas|none)$
                          type: string
                      type: object
                  type: object
                routing_partition_size:
                  description: The number of shards a custom routing value can go
                    to. Defaults to 1 and can only be set at index creation time.
                    This value must be less than the index.number_of_shards unless
                    the index.number_of_shards value is also 1. See Routing to an
                    index partition for more details about how this setting is used.
                  exclusiveMaximum: true
                  format: int32
                  maximum: 1024
                  minimum: 1
                  type: integer
                search:
                  description: How long a shard can not receive a search or get request
                    until it’s considered search idle. (default is 30s)
                  properties:
                    idle:
                      description: 'ES Index values taken from: https://www.elastic.co/guide/en/elasticsearch/reference/7.x/index-modules.html'
                      properties:
                        after:
                          description: How long a shard can not receive a search or
                            get request until it’s considered search idle. (default
                            is 30s)
                          type: string
                      type: object
                  type: object
                shard:
                  description: Shard structure
                  properties:
                    check_on_startup:
                      description: 'Whether or not shards should be checked for corruption
                        before opening. When corruption is detected, it will prevent
                        the shard from being opened. Accepts: true, false, checksum'
                      pattern: ^(true|false|checksum)$
                      type: string
                  type: object
              type: object
            version:
              description: (Optional, integer) Version number used to manage index
                templates externally. This number is not automatically generated by
                Elasticsearch.
              format: int64
              type: integer
          required:
          - index_patterns
          - mappings
          - name
          type: object
        status:
          description: ElasticSearchTemplateStatus defines the observed state of ElasticSearchTemplate
          properties:
            acknowledged:
              description: Acknowledgment of last operation success from ES cluster.
                If false - last operation failed or was not performed
              type: boolean
            latest_error:
              description: LatestError would hold error, if last operation was un-successful,
                or it would be empty otherways
              type: string
            operation:
              description: 'Last operation attempted on ES template. Can be: create
                or udpate'
              pattern: ^(create|update)$
              type: string
            template_name:
              type: string
          required:
          - operation
          - template_name
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
